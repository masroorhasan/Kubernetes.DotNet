/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.10
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using Kubernetes.DotNet.Client;
using Kubernetes.DotNet.Model;

namespace Kubernetes.DotNet.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICustom_objectsApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates a cluster scoped Custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>Object</returns>
        Object CreateClusterCustomObject (string group, string version, string plural, Object body, string pretty = null);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates a cluster scoped Custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> CreateClusterCustomObjectWithHttpInfo (string group, string version, string plural, Object body, string pretty = null);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates a namespace scoped Custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>Object</returns>
        Object CreateNamespacedCustomObject (string group, string version, string _namespace, string plural, Object body, string pretty = null);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates a namespace scoped Custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> CreateNamespacedCustomObjectWithHttpInfo (string group, string version, string _namespace, string plural, Object body, string pretty = null);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Deletes the specified cluster scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>Object</returns>
        Object DeleteClusterCustomObject (string group, string version, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Deletes the specified cluster scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> DeleteClusterCustomObjectWithHttpInfo (string group, string version, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Deletes the specified namespace scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>Object</returns>
        Object DeleteNamespacedCustomObject (string group, string version, string _namespace, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Deletes the specified namespace scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> DeleteNamespacedCustomObjectWithHttpInfo (string group, string version, string _namespace, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a cluster scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>Object</returns>
        Object GetClusterCustomObject (string group, string version, string plural, string name);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a cluster scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> GetClusterCustomObjectWithHttpInfo (string group, string version, string plural, string name);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a namespace scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>Object</returns>
        Object GetNamespacedCustomObject (string group, string version, string _namespace, string plural, string name);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a namespace scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> GetNamespacedCustomObjectWithHttpInfo (string group, string version, string _namespace, string plural, string name);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// list or watch cluster scoped custom objects
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>Object</returns>
        Object ListClusterCustomObject (string group, string version, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// list or watch cluster scoped custom objects
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> ListClusterCustomObjectWithHttpInfo (string group, string version, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// list or watch namespace scoped custom objects
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>Object</returns>
        Object ListNamespacedCustomObject (string group, string version, string _namespace, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// list or watch namespace scoped custom objects
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> ListNamespacedCustomObjectWithHttpInfo (string group, string version, string _namespace, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// replace the specified cluster scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>Object</returns>
        Object ReplaceClusterCustomObject (string group, string version, string plural, string name, Object body);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// replace the specified cluster scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> ReplaceClusterCustomObjectWithHttpInfo (string group, string version, string plural, string name, Object body);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// replace the specified namespace scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>Object</returns>
        Object ReplaceNamespacedCustomObject (string group, string version, string _namespace, string plural, string name, Object body);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// replace the specified namespace scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> ReplaceNamespacedCustomObjectWithHttpInfo (string group, string version, string _namespace, string plural, string name, Object body);
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates a cluster scoped Custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> CreateClusterCustomObjectAsync (string group, string version, string plural, Object body, string pretty = null);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates a cluster scoped Custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> CreateClusterCustomObjectAsyncWithHttpInfo (string group, string version, string plural, Object body, string pretty = null);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates a namespace scoped Custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> CreateNamespacedCustomObjectAsync (string group, string version, string _namespace, string plural, Object body, string pretty = null);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates a namespace scoped Custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> CreateNamespacedCustomObjectAsyncWithHttpInfo (string group, string version, string _namespace, string plural, Object body, string pretty = null);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Deletes the specified cluster scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> DeleteClusterCustomObjectAsync (string group, string version, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Deletes the specified cluster scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DeleteClusterCustomObjectAsyncWithHttpInfo (string group, string version, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Deletes the specified namespace scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> DeleteNamespacedCustomObjectAsync (string group, string version, string _namespace, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Deletes the specified namespace scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DeleteNamespacedCustomObjectAsyncWithHttpInfo (string group, string version, string _namespace, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a cluster scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> GetClusterCustomObjectAsync (string group, string version, string plural, string name);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a cluster scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetClusterCustomObjectAsyncWithHttpInfo (string group, string version, string plural, string name);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a namespace scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> GetNamespacedCustomObjectAsync (string group, string version, string _namespace, string plural, string name);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a namespace scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetNamespacedCustomObjectAsyncWithHttpInfo (string group, string version, string _namespace, string plural, string name);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// list or watch cluster scoped custom objects
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> ListClusterCustomObjectAsync (string group, string version, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// list or watch cluster scoped custom objects
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ListClusterCustomObjectAsyncWithHttpInfo (string group, string version, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// list or watch namespace scoped custom objects
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> ListNamespacedCustomObjectAsync (string group, string version, string _namespace, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// list or watch namespace scoped custom objects
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ListNamespacedCustomObjectAsyncWithHttpInfo (string group, string version, string _namespace, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// replace the specified cluster scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> ReplaceClusterCustomObjectAsync (string group, string version, string plural, string name, Object body);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// replace the specified cluster scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ReplaceClusterCustomObjectAsyncWithHttpInfo (string group, string version, string plural, string name, Object body);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// replace the specified namespace scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> ReplaceNamespacedCustomObjectAsync (string group, string version, string _namespace, string plural, string name, Object body);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// replace the specified namespace scoped custom object
        /// </remarks>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ReplaceNamespacedCustomObjectAsyncWithHttpInfo (string group, string version, string _namespace, string plural, string name, Object body);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class Custom_objectsApi : ICustom_objectsApi
    {
        private Kubernetes.DotNet.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="Custom_objectsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public Custom_objectsApi(String basePath)
        {
            this.Configuration = new Configuration(new ApiClient(basePath));

            ExceptionFactory = Kubernetes.DotNet.Client.Configuration.DefaultExceptionFactory;

            // ensure API client has configuration ready
            if (Configuration.ApiClient.Configuration == null)
            {
                this.Configuration.ApiClient.Configuration = this.Configuration;
            }
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Custom_objectsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public Custom_objectsApi(Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = Kubernetes.DotNet.Client.Configuration.DefaultExceptionFactory;

            // ensure API client has configuration ready
            if (Configuration.ApiClient.Configuration == null)
            {
                this.Configuration.ApiClient.Configuration = this.Configuration;
            }
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Kubernetes.DotNet.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public Dictionary<String, String> DefaultHeader()
        {
            return this.Configuration.DefaultHeader;
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        ///  Creates a cluster scoped Custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>Object</returns>
        public Object CreateClusterCustomObject (string group, string version, string plural, Object body, string pretty = null)
        {
             ApiResponse<Object> localVarResponse = CreateClusterCustomObjectWithHttpInfo(group, version, plural, body, pretty);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Creates a cluster scoped Custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > CreateClusterCustomObjectWithHttpInfo (string group, string version, string plural, Object body, string pretty = null)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->CreateClusterCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->CreateClusterCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->CreateClusterCustomObject");
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling Custom_objectsApi->CreateClusterCustomObject");

            var localVarPath = "/apis/{group}/{version}/{plural}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (pretty != null) localVarQueryParams.Add("pretty", Configuration.ApiClient.ParameterToString(pretty)); // query parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateClusterCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  Creates a cluster scoped Custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> CreateClusterCustomObjectAsync (string group, string version, string plural, Object body, string pretty = null)
        {
             ApiResponse<Object> localVarResponse = await CreateClusterCustomObjectAsyncWithHttpInfo(group, version, plural, body, pretty);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Creates a cluster scoped Custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> CreateClusterCustomObjectAsyncWithHttpInfo (string group, string version, string plural, Object body, string pretty = null)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->CreateClusterCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->CreateClusterCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->CreateClusterCustomObject");
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling Custom_objectsApi->CreateClusterCustomObject");

            var localVarPath = "/apis/{group}/{version}/{plural}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (pretty != null) localVarQueryParams.Add("pretty", Configuration.ApiClient.ParameterToString(pretty)); // query parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateClusterCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  Creates a namespace scoped Custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>Object</returns>
        public Object CreateNamespacedCustomObject (string group, string version, string _namespace, string plural, Object body, string pretty = null)
        {
             ApiResponse<Object> localVarResponse = CreateNamespacedCustomObjectWithHttpInfo(group, version, _namespace, plural, body, pretty);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Creates a namespace scoped Custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > CreateNamespacedCustomObjectWithHttpInfo (string group, string version, string _namespace, string plural, Object body, string pretty = null)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->CreateNamespacedCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->CreateNamespacedCustomObject");
            // verify the required parameter '_namespace' is set
            if (_namespace == null)
                throw new ApiException(400, "Missing required parameter '_namespace' when calling Custom_objectsApi->CreateNamespacedCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->CreateNamespacedCustomObject");
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling Custom_objectsApi->CreateNamespacedCustomObject");

            var localVarPath = "/apis/{group}/{version}/namespaces/{namespace}/{plural}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (_namespace != null) localVarPathParams.Add("namespace", Configuration.ApiClient.ParameterToString(_namespace)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (pretty != null) localVarQueryParams.Add("pretty", Configuration.ApiClient.ParameterToString(pretty)); // query parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateNamespacedCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  Creates a namespace scoped Custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> CreateNamespacedCustomObjectAsync (string group, string version, string _namespace, string plural, Object body, string pretty = null)
        {
             ApiResponse<Object> localVarResponse = await CreateNamespacedCustomObjectAsyncWithHttpInfo(group, version, _namespace, plural, body, pretty);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Creates a namespace scoped Custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="body">The JSON schema of the Resource to create.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> CreateNamespacedCustomObjectAsyncWithHttpInfo (string group, string version, string _namespace, string plural, Object body, string pretty = null)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->CreateNamespacedCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->CreateNamespacedCustomObject");
            // verify the required parameter '_namespace' is set
            if (_namespace == null)
                throw new ApiException(400, "Missing required parameter '_namespace' when calling Custom_objectsApi->CreateNamespacedCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->CreateNamespacedCustomObject");
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling Custom_objectsApi->CreateNamespacedCustomObject");

            var localVarPath = "/apis/{group}/{version}/namespaces/{namespace}/{plural}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (_namespace != null) localVarPathParams.Add("namespace", Configuration.ApiClient.ParameterToString(_namespace)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (pretty != null) localVarQueryParams.Add("pretty", Configuration.ApiClient.ParameterToString(pretty)); // query parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateNamespacedCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  Deletes the specified cluster scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>Object</returns>
        public Object DeleteClusterCustomObject (string group, string version, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null)
        {
             ApiResponse<Object> localVarResponse = DeleteClusterCustomObjectWithHttpInfo(group, version, plural, name, body, gracePeriodSeconds, orphanDependents, propagationPolicy);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Deletes the specified cluster scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > DeleteClusterCustomObjectWithHttpInfo (string group, string version, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->DeleteClusterCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->DeleteClusterCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->DeleteClusterCustomObject");
            // verify the required parameter 'name' is set
            if (name == null)
                throw new ApiException(400, "Missing required parameter 'name' when calling Custom_objectsApi->DeleteClusterCustomObject");
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling Custom_objectsApi->DeleteClusterCustomObject");

            var localVarPath = "/apis/{group}/{version}/{plural}/{name}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (name != null) localVarPathParams.Add("name", Configuration.ApiClient.ParameterToString(name)); // path parameter
            if (gracePeriodSeconds != null) localVarQueryParams.Add("gracePeriodSeconds", Configuration.ApiClient.ParameterToString(gracePeriodSeconds)); // query parameter
            if (orphanDependents != null) localVarQueryParams.Add("orphanDependents", Configuration.ApiClient.ParameterToString(orphanDependents)); // query parameter
            if (propagationPolicy != null) localVarQueryParams.Add("propagationPolicy", Configuration.ApiClient.ParameterToString(propagationPolicy)); // query parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteClusterCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  Deletes the specified cluster scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> DeleteClusterCustomObjectAsync (string group, string version, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null)
        {
             ApiResponse<Object> localVarResponse = await DeleteClusterCustomObjectAsyncWithHttpInfo(group, version, plural, name, body, gracePeriodSeconds, orphanDependents, propagationPolicy);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Deletes the specified cluster scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> DeleteClusterCustomObjectAsyncWithHttpInfo (string group, string version, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->DeleteClusterCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->DeleteClusterCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->DeleteClusterCustomObject");
            // verify the required parameter 'name' is set
            if (name == null)
                throw new ApiException(400, "Missing required parameter 'name' when calling Custom_objectsApi->DeleteClusterCustomObject");
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling Custom_objectsApi->DeleteClusterCustomObject");

            var localVarPath = "/apis/{group}/{version}/{plural}/{name}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (name != null) localVarPathParams.Add("name", Configuration.ApiClient.ParameterToString(name)); // path parameter
            if (gracePeriodSeconds != null) localVarQueryParams.Add("gracePeriodSeconds", Configuration.ApiClient.ParameterToString(gracePeriodSeconds)); // query parameter
            if (orphanDependents != null) localVarQueryParams.Add("orphanDependents", Configuration.ApiClient.ParameterToString(orphanDependents)); // query parameter
            if (propagationPolicy != null) localVarQueryParams.Add("propagationPolicy", Configuration.ApiClient.ParameterToString(propagationPolicy)); // query parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteClusterCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  Deletes the specified namespace scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>Object</returns>
        public Object DeleteNamespacedCustomObject (string group, string version, string _namespace, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null)
        {
             ApiResponse<Object> localVarResponse = DeleteNamespacedCustomObjectWithHttpInfo(group, version, _namespace, plural, name, body, gracePeriodSeconds, orphanDependents, propagationPolicy);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Deletes the specified namespace scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > DeleteNamespacedCustomObjectWithHttpInfo (string group, string version, string _namespace, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->DeleteNamespacedCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->DeleteNamespacedCustomObject");
            // verify the required parameter '_namespace' is set
            if (_namespace == null)
                throw new ApiException(400, "Missing required parameter '_namespace' when calling Custom_objectsApi->DeleteNamespacedCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->DeleteNamespacedCustomObject");
            // verify the required parameter 'name' is set
            if (name == null)
                throw new ApiException(400, "Missing required parameter 'name' when calling Custom_objectsApi->DeleteNamespacedCustomObject");
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling Custom_objectsApi->DeleteNamespacedCustomObject");

            var localVarPath = "/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (_namespace != null) localVarPathParams.Add("namespace", Configuration.ApiClient.ParameterToString(_namespace)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (name != null) localVarPathParams.Add("name", Configuration.ApiClient.ParameterToString(name)); // path parameter
            if (gracePeriodSeconds != null) localVarQueryParams.Add("gracePeriodSeconds", Configuration.ApiClient.ParameterToString(gracePeriodSeconds)); // query parameter
            if (orphanDependents != null) localVarQueryParams.Add("orphanDependents", Configuration.ApiClient.ParameterToString(orphanDependents)); // query parameter
            if (propagationPolicy != null) localVarQueryParams.Add("propagationPolicy", Configuration.ApiClient.ParameterToString(propagationPolicy)); // query parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteNamespacedCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  Deletes the specified namespace scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> DeleteNamespacedCustomObjectAsync (string group, string version, string _namespace, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null)
        {
             ApiResponse<Object> localVarResponse = await DeleteNamespacedCustomObjectAsyncWithHttpInfo(group, version, _namespace, plural, name, body, gracePeriodSeconds, orphanDependents, propagationPolicy);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Deletes the specified namespace scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body"></param>
        /// <param name="gracePeriodSeconds">The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. (optional)</param>
        /// <param name="orphanDependents">Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both. (optional)</param>
        /// <param name="propagationPolicy">Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> DeleteNamespacedCustomObjectAsyncWithHttpInfo (string group, string version, string _namespace, string plural, string name, V1DeleteOptions body, int? gracePeriodSeconds = null, bool? orphanDependents = null, string propagationPolicy = null)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->DeleteNamespacedCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->DeleteNamespacedCustomObject");
            // verify the required parameter '_namespace' is set
            if (_namespace == null)
                throw new ApiException(400, "Missing required parameter '_namespace' when calling Custom_objectsApi->DeleteNamespacedCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->DeleteNamespacedCustomObject");
            // verify the required parameter 'name' is set
            if (name == null)
                throw new ApiException(400, "Missing required parameter 'name' when calling Custom_objectsApi->DeleteNamespacedCustomObject");
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling Custom_objectsApi->DeleteNamespacedCustomObject");

            var localVarPath = "/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (_namespace != null) localVarPathParams.Add("namespace", Configuration.ApiClient.ParameterToString(_namespace)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (name != null) localVarPathParams.Add("name", Configuration.ApiClient.ParameterToString(name)); // path parameter
            if (gracePeriodSeconds != null) localVarQueryParams.Add("gracePeriodSeconds", Configuration.ApiClient.ParameterToString(gracePeriodSeconds)); // query parameter
            if (orphanDependents != null) localVarQueryParams.Add("orphanDependents", Configuration.ApiClient.ParameterToString(orphanDependents)); // query parameter
            if (propagationPolicy != null) localVarQueryParams.Add("propagationPolicy", Configuration.ApiClient.ParameterToString(propagationPolicy)); // query parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteNamespacedCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  Returns a cluster scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>Object</returns>
        public Object GetClusterCustomObject (string group, string version, string plural, string name)
        {
             ApiResponse<Object> localVarResponse = GetClusterCustomObjectWithHttpInfo(group, version, plural, name);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a cluster scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > GetClusterCustomObjectWithHttpInfo (string group, string version, string plural, string name)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->GetClusterCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->GetClusterCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->GetClusterCustomObject");
            // verify the required parameter 'name' is set
            if (name == null)
                throw new ApiException(400, "Missing required parameter 'name' when calling Custom_objectsApi->GetClusterCustomObject");

            var localVarPath = "/apis/{group}/{version}/{plural}/{name}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (name != null) localVarPathParams.Add("name", Configuration.ApiClient.ParameterToString(name)); // path parameter

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetClusterCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  Returns a cluster scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> GetClusterCustomObjectAsync (string group, string version, string plural, string name)
        {
             ApiResponse<Object> localVarResponse = await GetClusterCustomObjectAsyncWithHttpInfo(group, version, plural, name);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Returns a cluster scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetClusterCustomObjectAsyncWithHttpInfo (string group, string version, string plural, string name)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->GetClusterCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->GetClusterCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->GetClusterCustomObject");
            // verify the required parameter 'name' is set
            if (name == null)
                throw new ApiException(400, "Missing required parameter 'name' when calling Custom_objectsApi->GetClusterCustomObject");

            var localVarPath = "/apis/{group}/{version}/{plural}/{name}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (name != null) localVarPathParams.Add("name", Configuration.ApiClient.ParameterToString(name)); // path parameter

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetClusterCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  Returns a namespace scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>Object</returns>
        public Object GetNamespacedCustomObject (string group, string version, string _namespace, string plural, string name)
        {
             ApiResponse<Object> localVarResponse = GetNamespacedCustomObjectWithHttpInfo(group, version, _namespace, plural, name);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a namespace scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > GetNamespacedCustomObjectWithHttpInfo (string group, string version, string _namespace, string plural, string name)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->GetNamespacedCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->GetNamespacedCustomObject");
            // verify the required parameter '_namespace' is set
            if (_namespace == null)
                throw new ApiException(400, "Missing required parameter '_namespace' when calling Custom_objectsApi->GetNamespacedCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->GetNamespacedCustomObject");
            // verify the required parameter 'name' is set
            if (name == null)
                throw new ApiException(400, "Missing required parameter 'name' when calling Custom_objectsApi->GetNamespacedCustomObject");

            var localVarPath = "/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (_namespace != null) localVarPathParams.Add("namespace", Configuration.ApiClient.ParameterToString(_namespace)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (name != null) localVarPathParams.Add("name", Configuration.ApiClient.ParameterToString(name)); // path parameter

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetNamespacedCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  Returns a namespace scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> GetNamespacedCustomObjectAsync (string group, string version, string _namespace, string plural, string name)
        {
             ApiResponse<Object> localVarResponse = await GetNamespacedCustomObjectAsyncWithHttpInfo(group, version, _namespace, plural, name);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Returns a namespace scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetNamespacedCustomObjectAsyncWithHttpInfo (string group, string version, string _namespace, string plural, string name)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->GetNamespacedCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->GetNamespacedCustomObject");
            // verify the required parameter '_namespace' is set
            if (_namespace == null)
                throw new ApiException(400, "Missing required parameter '_namespace' when calling Custom_objectsApi->GetNamespacedCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->GetNamespacedCustomObject");
            // verify the required parameter 'name' is set
            if (name == null)
                throw new ApiException(400, "Missing required parameter 'name' when calling Custom_objectsApi->GetNamespacedCustomObject");

            var localVarPath = "/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (_namespace != null) localVarPathParams.Add("namespace", Configuration.ApiClient.ParameterToString(_namespace)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (name != null) localVarPathParams.Add("name", Configuration.ApiClient.ParameterToString(name)); // path parameter

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetNamespacedCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  list or watch cluster scoped custom objects
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>Object</returns>
        public Object ListClusterCustomObject (string group, string version, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null)
        {
             ApiResponse<Object> localVarResponse = ListClusterCustomObjectWithHttpInfo(group, version, plural, pretty, labelSelector, resourceVersion, watch);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  list or watch cluster scoped custom objects
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > ListClusterCustomObjectWithHttpInfo (string group, string version, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->ListClusterCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->ListClusterCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->ListClusterCustomObject");

            var localVarPath = "/apis/{group}/{version}/{plural}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/json;stream=watch"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (pretty != null) localVarQueryParams.Add("pretty", Configuration.ApiClient.ParameterToString(pretty)); // query parameter
            if (labelSelector != null) localVarQueryParams.Add("labelSelector", Configuration.ApiClient.ParameterToString(labelSelector)); // query parameter
            if (resourceVersion != null) localVarQueryParams.Add("resourceVersion", Configuration.ApiClient.ParameterToString(resourceVersion)); // query parameter
            if (watch != null) localVarQueryParams.Add("watch", Configuration.ApiClient.ParameterToString(watch)); // query parameter

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListClusterCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  list or watch cluster scoped custom objects
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> ListClusterCustomObjectAsync (string group, string version, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null)
        {
             ApiResponse<Object> localVarResponse = await ListClusterCustomObjectAsyncWithHttpInfo(group, version, plural, pretty, labelSelector, resourceVersion, watch);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  list or watch cluster scoped custom objects
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> ListClusterCustomObjectAsyncWithHttpInfo (string group, string version, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->ListClusterCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->ListClusterCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->ListClusterCustomObject");

            var localVarPath = "/apis/{group}/{version}/{plural}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/json;stream=watch"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (pretty != null) localVarQueryParams.Add("pretty", Configuration.ApiClient.ParameterToString(pretty)); // query parameter
            if (labelSelector != null) localVarQueryParams.Add("labelSelector", Configuration.ApiClient.ParameterToString(labelSelector)); // query parameter
            if (resourceVersion != null) localVarQueryParams.Add("resourceVersion", Configuration.ApiClient.ParameterToString(resourceVersion)); // query parameter
            if (watch != null) localVarQueryParams.Add("watch", Configuration.ApiClient.ParameterToString(watch)); // query parameter

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListClusterCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  list or watch namespace scoped custom objects
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>Object</returns>
        public Object ListNamespacedCustomObject (string group, string version, string _namespace, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null)
        {
             ApiResponse<Object> localVarResponse = ListNamespacedCustomObjectWithHttpInfo(group, version, _namespace, plural, pretty, labelSelector, resourceVersion, watch);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  list or watch namespace scoped custom objects
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > ListNamespacedCustomObjectWithHttpInfo (string group, string version, string _namespace, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->ListNamespacedCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->ListNamespacedCustomObject");
            // verify the required parameter '_namespace' is set
            if (_namespace == null)
                throw new ApiException(400, "Missing required parameter '_namespace' when calling Custom_objectsApi->ListNamespacedCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->ListNamespacedCustomObject");

            var localVarPath = "/apis/{group}/{version}/namespaces/{namespace}/{plural}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/json;stream=watch"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (_namespace != null) localVarPathParams.Add("namespace", Configuration.ApiClient.ParameterToString(_namespace)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (pretty != null) localVarQueryParams.Add("pretty", Configuration.ApiClient.ParameterToString(pretty)); // query parameter
            if (labelSelector != null) localVarQueryParams.Add("labelSelector", Configuration.ApiClient.ParameterToString(labelSelector)); // query parameter
            if (resourceVersion != null) localVarQueryParams.Add("resourceVersion", Configuration.ApiClient.ParameterToString(resourceVersion)); // query parameter
            if (watch != null) localVarQueryParams.Add("watch", Configuration.ApiClient.ParameterToString(watch)); // query parameter

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListNamespacedCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  list or watch namespace scoped custom objects
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> ListNamespacedCustomObjectAsync (string group, string version, string _namespace, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null)
        {
             ApiResponse<Object> localVarResponse = await ListNamespacedCustomObjectAsyncWithHttpInfo(group, version, _namespace, plural, pretty, labelSelector, resourceVersion, watch);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  list or watch namespace scoped custom objects
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">The custom resource&#39;s group name</param>
        /// <param name="version">The custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="pretty">If &#39;true&#39;, then the output is pretty printed. (optional)</param>
        /// <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything. (optional)</param>
        /// <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv. (optional)</param>
        /// <param name="watch">Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> ListNamespacedCustomObjectAsyncWithHttpInfo (string group, string version, string _namespace, string plural, string pretty = null, string labelSelector = null, string resourceVersion = null, bool? watch = null)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->ListNamespacedCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->ListNamespacedCustomObject");
            // verify the required parameter '_namespace' is set
            if (_namespace == null)
                throw new ApiException(400, "Missing required parameter '_namespace' when calling Custom_objectsApi->ListNamespacedCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->ListNamespacedCustomObject");

            var localVarPath = "/apis/{group}/{version}/namespaces/{namespace}/{plural}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/json;stream=watch"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (_namespace != null) localVarPathParams.Add("namespace", Configuration.ApiClient.ParameterToString(_namespace)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (pretty != null) localVarQueryParams.Add("pretty", Configuration.ApiClient.ParameterToString(pretty)); // query parameter
            if (labelSelector != null) localVarQueryParams.Add("labelSelector", Configuration.ApiClient.ParameterToString(labelSelector)); // query parameter
            if (resourceVersion != null) localVarQueryParams.Add("resourceVersion", Configuration.ApiClient.ParameterToString(resourceVersion)); // query parameter
            if (watch != null) localVarQueryParams.Add("watch", Configuration.ApiClient.ParameterToString(watch)); // query parameter

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListNamespacedCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  replace the specified cluster scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>Object</returns>
        public Object ReplaceClusterCustomObject (string group, string version, string plural, string name, Object body)
        {
             ApiResponse<Object> localVarResponse = ReplaceClusterCustomObjectWithHttpInfo(group, version, plural, name, body);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  replace the specified cluster scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > ReplaceClusterCustomObjectWithHttpInfo (string group, string version, string plural, string name, Object body)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->ReplaceClusterCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->ReplaceClusterCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->ReplaceClusterCustomObject");
            // verify the required parameter 'name' is set
            if (name == null)
                throw new ApiException(400, "Missing required parameter 'name' when calling Custom_objectsApi->ReplaceClusterCustomObject");
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling Custom_objectsApi->ReplaceClusterCustomObject");

            var localVarPath = "/apis/{group}/{version}/{plural}/{name}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (name != null) localVarPathParams.Add("name", Configuration.ApiClient.ParameterToString(name)); // path parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ReplaceClusterCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  replace the specified cluster scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> ReplaceClusterCustomObjectAsync (string group, string version, string plural, string name, Object body)
        {
             ApiResponse<Object> localVarResponse = await ReplaceClusterCustomObjectAsyncWithHttpInfo(group, version, plural, name, body);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  replace the specified cluster scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="plural">the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> ReplaceClusterCustomObjectAsyncWithHttpInfo (string group, string version, string plural, string name, Object body)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->ReplaceClusterCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->ReplaceClusterCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->ReplaceClusterCustomObject");
            // verify the required parameter 'name' is set
            if (name == null)
                throw new ApiException(400, "Missing required parameter 'name' when calling Custom_objectsApi->ReplaceClusterCustomObject");
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling Custom_objectsApi->ReplaceClusterCustomObject");

            var localVarPath = "/apis/{group}/{version}/{plural}/{name}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (name != null) localVarPathParams.Add("name", Configuration.ApiClient.ParameterToString(name)); // path parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ReplaceClusterCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  replace the specified namespace scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>Object</returns>
        public Object ReplaceNamespacedCustomObject (string group, string version, string _namespace, string plural, string name, Object body)
        {
             ApiResponse<Object> localVarResponse = ReplaceNamespacedCustomObjectWithHttpInfo(group, version, _namespace, plural, name, body);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  replace the specified namespace scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > ReplaceNamespacedCustomObjectWithHttpInfo (string group, string version, string _namespace, string plural, string name, Object body)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->ReplaceNamespacedCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->ReplaceNamespacedCustomObject");
            // verify the required parameter '_namespace' is set
            if (_namespace == null)
                throw new ApiException(400, "Missing required parameter '_namespace' when calling Custom_objectsApi->ReplaceNamespacedCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->ReplaceNamespacedCustomObject");
            // verify the required parameter 'name' is set
            if (name == null)
                throw new ApiException(400, "Missing required parameter 'name' when calling Custom_objectsApi->ReplaceNamespacedCustomObject");
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling Custom_objectsApi->ReplaceNamespacedCustomObject");

            var localVarPath = "/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (_namespace != null) localVarPathParams.Add("namespace", Configuration.ApiClient.ParameterToString(_namespace)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (name != null) localVarPathParams.Add("name", Configuration.ApiClient.ParameterToString(name)); // path parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ReplaceNamespacedCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

        /// <summary>
        ///  replace the specified namespace scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> ReplaceNamespacedCustomObjectAsync (string group, string version, string _namespace, string plural, string name, Object body)
        {
             ApiResponse<Object> localVarResponse = await ReplaceNamespacedCustomObjectAsyncWithHttpInfo(group, version, _namespace, plural, name, body);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  replace the specified namespace scoped custom object
        /// </summary>
        /// <exception cref="Kubernetes.DotNet.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="group">the custom resource&#39;s group</param>
        /// <param name="version">the custom resource&#39;s version</param>
        /// <param name="_namespace">The custom resource&#39;s namespace</param>
        /// <param name="plural">the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.</param>
        /// <param name="name">the custom object&#39;s name</param>
        /// <param name="body">The JSON schema of the Resource to replace.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> ReplaceNamespacedCustomObjectAsyncWithHttpInfo (string group, string version, string _namespace, string plural, string name, Object body)
        {
            // verify the required parameter 'group' is set
            if (group == null)
                throw new ApiException(400, "Missing required parameter 'group' when calling Custom_objectsApi->ReplaceNamespacedCustomObject");
            // verify the required parameter 'version' is set
            if (version == null)
                throw new ApiException(400, "Missing required parameter 'version' when calling Custom_objectsApi->ReplaceNamespacedCustomObject");
            // verify the required parameter '_namespace' is set
            if (_namespace == null)
                throw new ApiException(400, "Missing required parameter '_namespace' when calling Custom_objectsApi->ReplaceNamespacedCustomObject");
            // verify the required parameter 'plural' is set
            if (plural == null)
                throw new ApiException(400, "Missing required parameter 'plural' when calling Custom_objectsApi->ReplaceNamespacedCustomObject");
            // verify the required parameter 'name' is set
            if (name == null)
                throw new ApiException(400, "Missing required parameter 'name' when calling Custom_objectsApi->ReplaceNamespacedCustomObject");
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling Custom_objectsApi->ReplaceNamespacedCustomObject");

            var localVarPath = "/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "*/*"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (group != null) localVarPathParams.Add("group", Configuration.ApiClient.ParameterToString(group)); // path parameter
            if (version != null) localVarPathParams.Add("version", Configuration.ApiClient.ParameterToString(version)); // path parameter
            if (_namespace != null) localVarPathParams.Add("namespace", Configuration.ApiClient.ParameterToString(_namespace)); // path parameter
            if (plural != null) localVarPathParams.Add("plural", Configuration.ApiClient.ParameterToString(plural)); // path parameter
            if (name != null) localVarPathParams.Add("name", Configuration.ApiClient.ParameterToString(name)); // path parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // authentication (BearerToken) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("authorization")))
            {
                localVarHeaderParams["authorization"] = Configuration.GetApiKeyWithPrefix("authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ReplaceNamespacedCustomObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (Object) Configuration.ApiClient.Deserialize(localVarResponse, typeof(Object)));
        }

    }
}
