/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.10
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Kubernetes.DotNet.Client.SwaggerDateConverter;

namespace Kubernetes.DotNet.Model
{
    /// <summary>
    /// Describe a container image
    /// </summary>
    [DataContract]
    public partial class V1ContainerImage :  IEquatable<V1ContainerImage>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="V1ContainerImage" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected V1ContainerImage() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="V1ContainerImage" /> class.
        /// </summary>
        /// <param name="Names">Names by which this image is known. e.g. [\&quot;gcr.io/google_containers/hyperkube:v1.0.7\&quot;, \&quot;dockerhub.io/google_containers/hyperkube:v1.0.7\&quot;] (required).</param>
        /// <param name="SizeBytes">The size of the image in bytes..</param>
        public V1ContainerImage(List<string> Names = default(List<string>), long? SizeBytes = default(long?))
        {
            // to ensure "Names" is required (not null)
            if (Names == null)
            {
                throw new InvalidDataException("Names is a required property for V1ContainerImage and cannot be null");
            }
            else
            {
                this.Names = Names;
            }
            this.SizeBytes = SizeBytes;
        }
        
        /// <summary>
        /// Names by which this image is known. e.g. [\&quot;gcr.io/google_containers/hyperkube:v1.0.7\&quot;, \&quot;dockerhub.io/google_containers/hyperkube:v1.0.7\&quot;]
        /// </summary>
        /// <value>Names by which this image is known. e.g. [\&quot;gcr.io/google_containers/hyperkube:v1.0.7\&quot;, \&quot;dockerhub.io/google_containers/hyperkube:v1.0.7\&quot;]</value>
        [DataMember(Name="names", EmitDefaultValue=false)]
        public List<string> Names { get; set; }

        /// <summary>
        /// The size of the image in bytes.
        /// </summary>
        /// <value>The size of the image in bytes.</value>
        [DataMember(Name="sizeBytes", EmitDefaultValue=false)]
        public long? SizeBytes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class V1ContainerImage {\n");
            sb.Append("  Names: ").Append(Names).Append("\n");
            sb.Append("  SizeBytes: ").Append(SizeBytes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as V1ContainerImage);
        }

        /// <summary>
        /// Returns true if V1ContainerImage instances are equal
        /// </summary>
        /// <param name="other">Instance of V1ContainerImage to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(V1ContainerImage other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Names == other.Names ||
                    this.Names != null &&
                    this.Names.SequenceEqual(other.Names)
                ) && 
                (
                    this.SizeBytes == other.SizeBytes ||
                    this.SizeBytes != null &&
                    this.SizeBytes.Equals(other.SizeBytes)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Names != null)
                    hash = hash * 59 + this.Names.GetHashCode();
                if (this.SizeBytes != null)
                    hash = hash * 59 + this.SizeBytes.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
