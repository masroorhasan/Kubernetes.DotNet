/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.10
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Kubernetes.DotNet.Client.SwaggerDateConverter;

namespace Kubernetes.DotNet.Model
{
    /// <summary>
    /// specification of a horizontal pod autoscaler.
    /// </summary>
    [DataContract]
    public partial class V1HorizontalPodAutoscalerSpec :  IEquatable<V1HorizontalPodAutoscalerSpec>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="V1HorizontalPodAutoscalerSpec" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected V1HorizontalPodAutoscalerSpec() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="V1HorizontalPodAutoscalerSpec" /> class.
        /// </summary>
        /// <param name="MaxReplicas">upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas. (required).</param>
        /// <param name="MinReplicas">lower limit for the number of pods that can be set by the autoscaler, default 1..</param>
        /// <param name="ScaleTargetRef">reference to scaled resource; horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource. (required).</param>
        /// <param name="TargetCPUUtilizationPercentage">target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used..</param>
        public V1HorizontalPodAutoscalerSpec(int? MaxReplicas = default(int?), int? MinReplicas = default(int?), V1CrossVersionObjectReference ScaleTargetRef = default(V1CrossVersionObjectReference), int? TargetCPUUtilizationPercentage = default(int?))
        {
            // to ensure "MaxReplicas" is required (not null)
            if (MaxReplicas == null)
            {
                throw new InvalidDataException("MaxReplicas is a required property for V1HorizontalPodAutoscalerSpec and cannot be null");
            }
            else
            {
                this.MaxReplicas = MaxReplicas;
            }
            // to ensure "ScaleTargetRef" is required (not null)
            if (ScaleTargetRef == null)
            {
                throw new InvalidDataException("ScaleTargetRef is a required property for V1HorizontalPodAutoscalerSpec and cannot be null");
            }
            else
            {
                this.ScaleTargetRef = ScaleTargetRef;
            }
            this.MinReplicas = MinReplicas;
            this.TargetCPUUtilizationPercentage = TargetCPUUtilizationPercentage;
        }
        
        /// <summary>
        /// upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.
        /// </summary>
        /// <value>upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.</value>
        [DataMember(Name="maxReplicas", EmitDefaultValue=false)]
        public int? MaxReplicas { get; set; }

        /// <summary>
        /// lower limit for the number of pods that can be set by the autoscaler, default 1.
        /// </summary>
        /// <value>lower limit for the number of pods that can be set by the autoscaler, default 1.</value>
        [DataMember(Name="minReplicas", EmitDefaultValue=false)]
        public int? MinReplicas { get; set; }

        /// <summary>
        /// reference to scaled resource; horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource.
        /// </summary>
        /// <value>reference to scaled resource; horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource.</value>
        [DataMember(Name="scaleTargetRef", EmitDefaultValue=false)]
        public V1CrossVersionObjectReference ScaleTargetRef { get; set; }

        /// <summary>
        /// target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.
        /// </summary>
        /// <value>target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.</value>
        [DataMember(Name="targetCPUUtilizationPercentage", EmitDefaultValue=false)]
        public int? TargetCPUUtilizationPercentage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class V1HorizontalPodAutoscalerSpec {\n");
            sb.Append("  MaxReplicas: ").Append(MaxReplicas).Append("\n");
            sb.Append("  MinReplicas: ").Append(MinReplicas).Append("\n");
            sb.Append("  ScaleTargetRef: ").Append(ScaleTargetRef).Append("\n");
            sb.Append("  TargetCPUUtilizationPercentage: ").Append(TargetCPUUtilizationPercentage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as V1HorizontalPodAutoscalerSpec);
        }

        /// <summary>
        /// Returns true if V1HorizontalPodAutoscalerSpec instances are equal
        /// </summary>
        /// <param name="other">Instance of V1HorizontalPodAutoscalerSpec to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(V1HorizontalPodAutoscalerSpec other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.MaxReplicas == other.MaxReplicas ||
                    this.MaxReplicas != null &&
                    this.MaxReplicas.Equals(other.MaxReplicas)
                ) && 
                (
                    this.MinReplicas == other.MinReplicas ||
                    this.MinReplicas != null &&
                    this.MinReplicas.Equals(other.MinReplicas)
                ) && 
                (
                    this.ScaleTargetRef == other.ScaleTargetRef ||
                    this.ScaleTargetRef != null &&
                    this.ScaleTargetRef.Equals(other.ScaleTargetRef)
                ) && 
                (
                    this.TargetCPUUtilizationPercentage == other.TargetCPUUtilizationPercentage ||
                    this.TargetCPUUtilizationPercentage != null &&
                    this.TargetCPUUtilizationPercentage.Equals(other.TargetCPUUtilizationPercentage)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.MaxReplicas != null)
                    hash = hash * 59 + this.MaxReplicas.GetHashCode();
                if (this.MinReplicas != null)
                    hash = hash * 59 + this.MinReplicas.GetHashCode();
                if (this.ScaleTargetRef != null)
                    hash = hash * 59 + this.ScaleTargetRef.GetHashCode();
                if (this.TargetCPUUtilizationPercentage != null)
                    hash = hash * 59 + this.TargetCPUUtilizationPercentage.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
