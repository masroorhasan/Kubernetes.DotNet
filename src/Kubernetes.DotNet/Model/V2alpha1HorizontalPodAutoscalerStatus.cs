/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.10
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Kubernetes.DotNet.Client.SwaggerDateConverter;

namespace Kubernetes.DotNet.Model
{
    /// <summary>
    /// HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.
    /// </summary>
    [DataContract]
    public partial class V2alpha1HorizontalPodAutoscalerStatus :  IEquatable<V2alpha1HorizontalPodAutoscalerStatus>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="V2alpha1HorizontalPodAutoscalerStatus" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected V2alpha1HorizontalPodAutoscalerStatus() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="V2alpha1HorizontalPodAutoscalerStatus" /> class.
        /// </summary>
        /// <param name="Conditions">conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met. (required).</param>
        /// <param name="CurrentMetrics">currentMetrics is the last read state of the metrics used by this autoscaler. (required).</param>
        /// <param name="CurrentReplicas">currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler. (required).</param>
        /// <param name="DesiredReplicas">desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler. (required).</param>
        /// <param name="LastScaleTime">lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number of pods, used by the autoscaler to control how often the number of pods is changed..</param>
        /// <param name="ObservedGeneration">observedGeneration is the most recent generation observed by this autoscaler..</param>
        public V2alpha1HorizontalPodAutoscalerStatus(List<V2alpha1HorizontalPodAutoscalerCondition> Conditions = default(List<V2alpha1HorizontalPodAutoscalerCondition>), List<V2alpha1MetricStatus> CurrentMetrics = default(List<V2alpha1MetricStatus>), int? CurrentReplicas = default(int?), int? DesiredReplicas = default(int?), DateTime? LastScaleTime = default(DateTime?), long? ObservedGeneration = default(long?))
        {
            // to ensure "Conditions" is required (not null)
            if (Conditions == null)
            {
                throw new InvalidDataException("Conditions is a required property for V2alpha1HorizontalPodAutoscalerStatus and cannot be null");
            }
            else
            {
                this.Conditions = Conditions;
            }
            // to ensure "CurrentMetrics" is required (not null)
            if (CurrentMetrics == null)
            {
                throw new InvalidDataException("CurrentMetrics is a required property for V2alpha1HorizontalPodAutoscalerStatus and cannot be null");
            }
            else
            {
                this.CurrentMetrics = CurrentMetrics;
            }
            // to ensure "CurrentReplicas" is required (not null)
            if (CurrentReplicas == null)
            {
                throw new InvalidDataException("CurrentReplicas is a required property for V2alpha1HorizontalPodAutoscalerStatus and cannot be null");
            }
            else
            {
                this.CurrentReplicas = CurrentReplicas;
            }
            // to ensure "DesiredReplicas" is required (not null)
            if (DesiredReplicas == null)
            {
                throw new InvalidDataException("DesiredReplicas is a required property for V2alpha1HorizontalPodAutoscalerStatus and cannot be null");
            }
            else
            {
                this.DesiredReplicas = DesiredReplicas;
            }
            this.LastScaleTime = LastScaleTime;
            this.ObservedGeneration = ObservedGeneration;
        }
        
        /// <summary>
        /// conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.
        /// </summary>
        /// <value>conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.</value>
        [DataMember(Name="conditions", EmitDefaultValue=false)]
        public List<V2alpha1HorizontalPodAutoscalerCondition> Conditions { get; set; }

        /// <summary>
        /// currentMetrics is the last read state of the metrics used by this autoscaler.
        /// </summary>
        /// <value>currentMetrics is the last read state of the metrics used by this autoscaler.</value>
        [DataMember(Name="currentMetrics", EmitDefaultValue=false)]
        public List<V2alpha1MetricStatus> CurrentMetrics { get; set; }

        /// <summary>
        /// currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler.
        /// </summary>
        /// <value>currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler.</value>
        [DataMember(Name="currentReplicas", EmitDefaultValue=false)]
        public int? CurrentReplicas { get; set; }

        /// <summary>
        /// desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler.
        /// </summary>
        /// <value>desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler.</value>
        [DataMember(Name="desiredReplicas", EmitDefaultValue=false)]
        public int? DesiredReplicas { get; set; }

        /// <summary>
        /// lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number of pods, used by the autoscaler to control how often the number of pods is changed.
        /// </summary>
        /// <value>lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number of pods, used by the autoscaler to control how often the number of pods is changed.</value>
        [DataMember(Name="lastScaleTime", EmitDefaultValue=false)]
        public DateTime? LastScaleTime { get; set; }

        /// <summary>
        /// observedGeneration is the most recent generation observed by this autoscaler.
        /// </summary>
        /// <value>observedGeneration is the most recent generation observed by this autoscaler.</value>
        [DataMember(Name="observedGeneration", EmitDefaultValue=false)]
        public long? ObservedGeneration { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class V2alpha1HorizontalPodAutoscalerStatus {\n");
            sb.Append("  Conditions: ").Append(Conditions).Append("\n");
            sb.Append("  CurrentMetrics: ").Append(CurrentMetrics).Append("\n");
            sb.Append("  CurrentReplicas: ").Append(CurrentReplicas).Append("\n");
            sb.Append("  DesiredReplicas: ").Append(DesiredReplicas).Append("\n");
            sb.Append("  LastScaleTime: ").Append(LastScaleTime).Append("\n");
            sb.Append("  ObservedGeneration: ").Append(ObservedGeneration).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as V2alpha1HorizontalPodAutoscalerStatus);
        }

        /// <summary>
        /// Returns true if V2alpha1HorizontalPodAutoscalerStatus instances are equal
        /// </summary>
        /// <param name="other">Instance of V2alpha1HorizontalPodAutoscalerStatus to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(V2alpha1HorizontalPodAutoscalerStatus other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Conditions == other.Conditions ||
                    this.Conditions != null &&
                    this.Conditions.SequenceEqual(other.Conditions)
                ) && 
                (
                    this.CurrentMetrics == other.CurrentMetrics ||
                    this.CurrentMetrics != null &&
                    this.CurrentMetrics.SequenceEqual(other.CurrentMetrics)
                ) && 
                (
                    this.CurrentReplicas == other.CurrentReplicas ||
                    this.CurrentReplicas != null &&
                    this.CurrentReplicas.Equals(other.CurrentReplicas)
                ) && 
                (
                    this.DesiredReplicas == other.DesiredReplicas ||
                    this.DesiredReplicas != null &&
                    this.DesiredReplicas.Equals(other.DesiredReplicas)
                ) && 
                (
                    this.LastScaleTime == other.LastScaleTime ||
                    this.LastScaleTime != null &&
                    this.LastScaleTime.Equals(other.LastScaleTime)
                ) && 
                (
                    this.ObservedGeneration == other.ObservedGeneration ||
                    this.ObservedGeneration != null &&
                    this.ObservedGeneration.Equals(other.ObservedGeneration)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Conditions != null)
                    hash = hash * 59 + this.Conditions.GetHashCode();
                if (this.CurrentMetrics != null)
                    hash = hash * 59 + this.CurrentMetrics.GetHashCode();
                if (this.CurrentReplicas != null)
                    hash = hash * 59 + this.CurrentReplicas.GetHashCode();
                if (this.DesiredReplicas != null)
                    hash = hash * 59 + this.DesiredReplicas.GetHashCode();
                if (this.LastScaleTime != null)
                    hash = hash * 59 + this.LastScaleTime.GetHashCode();
                if (this.ObservedGeneration != null)
                    hash = hash * 59 + this.ObservedGeneration.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
