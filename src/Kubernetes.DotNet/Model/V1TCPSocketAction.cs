/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.10
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Kubernetes.DotNet.Client.SwaggerDateConverter;

namespace Kubernetes.DotNet.Model
{
    /// <summary>
    /// TCPSocketAction describes an action based on opening a socket
    /// </summary>
    [DataContract]
    public partial class V1TCPSocketAction :  IEquatable<V1TCPSocketAction>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="V1TCPSocketAction" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected V1TCPSocketAction() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="V1TCPSocketAction" /> class.
        /// </summary>
        /// <param name="Host">Optional: Host name to connect to, defaults to the pod IP..</param>
        /// <param name="Port">Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. (required).</param>
        public V1TCPSocketAction(string Host = default(string), Object Port = default(Object))
        {
            // to ensure "Port" is required (not null)
            if (Port == null)
            {
                throw new InvalidDataException("Port is a required property for V1TCPSocketAction and cannot be null");
            }
            else
            {
                this.Port = Port;
            }
            this.Host = Host;
        }
        
        /// <summary>
        /// Optional: Host name to connect to, defaults to the pod IP.
        /// </summary>
        /// <value>Optional: Host name to connect to, defaults to the pod IP.</value>
        [DataMember(Name="host", EmitDefaultValue=false)]
        public string Host { get; set; }

        /// <summary>
        /// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
        /// </summary>
        /// <value>Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.</value>
        [DataMember(Name="port", EmitDefaultValue=false)]
        public Object Port { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class V1TCPSocketAction {\n");
            sb.Append("  Host: ").Append(Host).Append("\n");
            sb.Append("  Port: ").Append(Port).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as V1TCPSocketAction);
        }

        /// <summary>
        /// Returns true if V1TCPSocketAction instances are equal
        /// </summary>
        /// <param name="other">Instance of V1TCPSocketAction to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(V1TCPSocketAction other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Host == other.Host ||
                    this.Host != null &&
                    this.Host.Equals(other.Host)
                ) && 
                (
                    this.Port == other.Port ||
                    this.Port != null &&
                    this.Port.Equals(other.Port)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Host != null)
                    hash = hash * 59 + this.Host.GetHashCode();
                if (this.Port != null)
                    hash = hash * 59 + this.Port.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
