/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.10
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Kubernetes.DotNet.Client.SwaggerDateConverter;

namespace Kubernetes.DotNet.Model
{
    /// <summary>
    /// StatefulSetStatus represents the current state of a StatefulSet.
    /// </summary>
    [DataContract]
    public partial class V1beta1StatefulSetStatus :  IEquatable<V1beta1StatefulSetStatus>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="V1beta1StatefulSetStatus" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected V1beta1StatefulSetStatus() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="V1beta1StatefulSetStatus" /> class.
        /// </summary>
        /// <param name="CurrentReplicas">currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision..</param>
        /// <param name="CurrentRevision">currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas)..</param>
        /// <param name="ObservedGeneration">observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet&#39;s generation, which is updated on mutation by the API Server..</param>
        /// <param name="ReadyReplicas">readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition..</param>
        /// <param name="Replicas">replicas is the number of Pods created by the StatefulSet controller. (required).</param>
        /// <param name="UpdateRevision">updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas).</param>
        /// <param name="UpdatedReplicas">updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision..</param>
        public V1beta1StatefulSetStatus(int? CurrentReplicas = default(int?), string CurrentRevision = default(string), long? ObservedGeneration = default(long?), int? ReadyReplicas = default(int?), int? Replicas = default(int?), string UpdateRevision = default(string), int? UpdatedReplicas = default(int?))
        {
            // to ensure "Replicas" is required (not null)
            if (Replicas == null)
            {
                throw new InvalidDataException("Replicas is a required property for V1beta1StatefulSetStatus and cannot be null");
            }
            else
            {
                this.Replicas = Replicas;
            }
            this.CurrentReplicas = CurrentReplicas;
            this.CurrentRevision = CurrentRevision;
            this.ObservedGeneration = ObservedGeneration;
            this.ReadyReplicas = ReadyReplicas;
            this.UpdateRevision = UpdateRevision;
            this.UpdatedReplicas = UpdatedReplicas;
        }
        
        /// <summary>
        /// currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision.
        /// </summary>
        /// <value>currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision.</value>
        [DataMember(Name="currentReplicas", EmitDefaultValue=false)]
        public int? CurrentReplicas { get; set; }

        /// <summary>
        /// currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas).
        /// </summary>
        /// <value>currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas).</value>
        [DataMember(Name="currentRevision", EmitDefaultValue=false)]
        public string CurrentRevision { get; set; }

        /// <summary>
        /// observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet&#39;s generation, which is updated on mutation by the API Server.
        /// </summary>
        /// <value>observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet&#39;s generation, which is updated on mutation by the API Server.</value>
        [DataMember(Name="observedGeneration", EmitDefaultValue=false)]
        public long? ObservedGeneration { get; set; }

        /// <summary>
        /// readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition.
        /// </summary>
        /// <value>readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition.</value>
        [DataMember(Name="readyReplicas", EmitDefaultValue=false)]
        public int? ReadyReplicas { get; set; }

        /// <summary>
        /// replicas is the number of Pods created by the StatefulSet controller.
        /// </summary>
        /// <value>replicas is the number of Pods created by the StatefulSet controller.</value>
        [DataMember(Name="replicas", EmitDefaultValue=false)]
        public int? Replicas { get; set; }

        /// <summary>
        /// updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)
        /// </summary>
        /// <value>updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)</value>
        [DataMember(Name="updateRevision", EmitDefaultValue=false)]
        public string UpdateRevision { get; set; }

        /// <summary>
        /// updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision.
        /// </summary>
        /// <value>updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision.</value>
        [DataMember(Name="updatedReplicas", EmitDefaultValue=false)]
        public int? UpdatedReplicas { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class V1beta1StatefulSetStatus {\n");
            sb.Append("  CurrentReplicas: ").Append(CurrentReplicas).Append("\n");
            sb.Append("  CurrentRevision: ").Append(CurrentRevision).Append("\n");
            sb.Append("  ObservedGeneration: ").Append(ObservedGeneration).Append("\n");
            sb.Append("  ReadyReplicas: ").Append(ReadyReplicas).Append("\n");
            sb.Append("  Replicas: ").Append(Replicas).Append("\n");
            sb.Append("  UpdateRevision: ").Append(UpdateRevision).Append("\n");
            sb.Append("  UpdatedReplicas: ").Append(UpdatedReplicas).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as V1beta1StatefulSetStatus);
        }

        /// <summary>
        /// Returns true if V1beta1StatefulSetStatus instances are equal
        /// </summary>
        /// <param name="other">Instance of V1beta1StatefulSetStatus to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(V1beta1StatefulSetStatus other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.CurrentReplicas == other.CurrentReplicas ||
                    this.CurrentReplicas != null &&
                    this.CurrentReplicas.Equals(other.CurrentReplicas)
                ) && 
                (
                    this.CurrentRevision == other.CurrentRevision ||
                    this.CurrentRevision != null &&
                    this.CurrentRevision.Equals(other.CurrentRevision)
                ) && 
                (
                    this.ObservedGeneration == other.ObservedGeneration ||
                    this.ObservedGeneration != null &&
                    this.ObservedGeneration.Equals(other.ObservedGeneration)
                ) && 
                (
                    this.ReadyReplicas == other.ReadyReplicas ||
                    this.ReadyReplicas != null &&
                    this.ReadyReplicas.Equals(other.ReadyReplicas)
                ) && 
                (
                    this.Replicas == other.Replicas ||
                    this.Replicas != null &&
                    this.Replicas.Equals(other.Replicas)
                ) && 
                (
                    this.UpdateRevision == other.UpdateRevision ||
                    this.UpdateRevision != null &&
                    this.UpdateRevision.Equals(other.UpdateRevision)
                ) && 
                (
                    this.UpdatedReplicas == other.UpdatedReplicas ||
                    this.UpdatedReplicas != null &&
                    this.UpdatedReplicas.Equals(other.UpdatedReplicas)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.CurrentReplicas != null)
                    hash = hash * 59 + this.CurrentReplicas.GetHashCode();
                if (this.CurrentRevision != null)
                    hash = hash * 59 + this.CurrentRevision.GetHashCode();
                if (this.ObservedGeneration != null)
                    hash = hash * 59 + this.ObservedGeneration.GetHashCode();
                if (this.ReadyReplicas != null)
                    hash = hash * 59 + this.ReadyReplicas.GetHashCode();
                if (this.Replicas != null)
                    hash = hash * 59 + this.Replicas.GetHashCode();
                if (this.UpdateRevision != null)
                    hash = hash * 59 + this.UpdateRevision.GetHashCode();
                if (this.UpdatedReplicas != null)
                    hash = hash * 59 + this.UpdatedReplicas.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
