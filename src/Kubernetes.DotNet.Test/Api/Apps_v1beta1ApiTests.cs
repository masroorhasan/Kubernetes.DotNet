/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.10
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Kubernetes.DotNet.Client;
using Kubernetes.DotNet.Api;
using Kubernetes.DotNet.Model;

namespace Kubernetes.DotNet.Test
{
    /// <summary>
    ///  Class for testing Apps_v1beta1Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class Apps_v1beta1ApiTests
    {
        private Apps_v1beta1Api instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new Apps_v1beta1Api();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Apps_v1beta1Api
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' Apps_v1beta1Api
            //Assert.IsInstanceOfType(typeof(Apps_v1beta1Api), instance, "instance is a Apps_v1beta1Api");
        }

        
        /// <summary>
        /// Test CreateNamespacedControllerRevision
        /// </summary>
        [Test]
        public void CreateNamespacedControllerRevisionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //V1beta1ControllerRevision body = null;
            //string pretty = null;
            //var response = instance.CreateNamespacedControllerRevision(_namespace, body, pretty);
            //Assert.IsInstanceOf<V1beta1ControllerRevision> (response, "response is V1beta1ControllerRevision");
        }
        
        /// <summary>
        /// Test CreateNamespacedDeployment
        /// </summary>
        [Test]
        public void CreateNamespacedDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //AppsV1beta1Deployment body = null;
            //string pretty = null;
            //var response = instance.CreateNamespacedDeployment(_namespace, body, pretty);
            //Assert.IsInstanceOf<AppsV1beta1Deployment> (response, "response is AppsV1beta1Deployment");
        }
        
        /// <summary>
        /// Test CreateNamespacedDeploymentRollback
        /// </summary>
        [Test]
        public void CreateNamespacedDeploymentRollbackTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //AppsV1beta1DeploymentRollback body = null;
            //string pretty = null;
            //var response = instance.CreateNamespacedDeploymentRollback(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<AppsV1beta1DeploymentRollback> (response, "response is AppsV1beta1DeploymentRollback");
        }
        
        /// <summary>
        /// Test CreateNamespacedStatefulSet
        /// </summary>
        [Test]
        public void CreateNamespacedStatefulSetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //V1beta1StatefulSet body = null;
            //string pretty = null;
            //var response = instance.CreateNamespacedStatefulSet(_namespace, body, pretty);
            //Assert.IsInstanceOf<V1beta1StatefulSet> (response, "response is V1beta1StatefulSet");
        }
        
        /// <summary>
        /// Test DeleteCollectionNamespacedControllerRevision
        /// </summary>
        [Test]
        public void DeleteCollectionNamespacedControllerRevisionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string pretty = null;
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.DeleteCollectionNamespacedControllerRevision(_namespace, pretty, fieldSelector, includeUninitialized, labelSelector, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1Status> (response, "response is V1Status");
        }
        
        /// <summary>
        /// Test DeleteCollectionNamespacedDeployment
        /// </summary>
        [Test]
        public void DeleteCollectionNamespacedDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string pretty = null;
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.DeleteCollectionNamespacedDeployment(_namespace, pretty, fieldSelector, includeUninitialized, labelSelector, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1Status> (response, "response is V1Status");
        }
        
        /// <summary>
        /// Test DeleteCollectionNamespacedStatefulSet
        /// </summary>
        [Test]
        public void DeleteCollectionNamespacedStatefulSetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string pretty = null;
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.DeleteCollectionNamespacedStatefulSet(_namespace, pretty, fieldSelector, includeUninitialized, labelSelector, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1Status> (response, "response is V1Status");
        }
        
        /// <summary>
        /// Test DeleteNamespacedControllerRevision
        /// </summary>
        [Test]
        public void DeleteNamespacedControllerRevisionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //V1DeleteOptions body = null;
            //string pretty = null;
            //int? gracePeriodSeconds = null;
            //bool? orphanDependents = null;
            //string propagationPolicy = null;
            //var response = instance.DeleteNamespacedControllerRevision(name, _namespace, body, pretty, gracePeriodSeconds, orphanDependents, propagationPolicy);
            //Assert.IsInstanceOf<V1Status> (response, "response is V1Status");
        }
        
        /// <summary>
        /// Test DeleteNamespacedDeployment
        /// </summary>
        [Test]
        public void DeleteNamespacedDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //V1DeleteOptions body = null;
            //string pretty = null;
            //int? gracePeriodSeconds = null;
            //bool? orphanDependents = null;
            //string propagationPolicy = null;
            //var response = instance.DeleteNamespacedDeployment(name, _namespace, body, pretty, gracePeriodSeconds, orphanDependents, propagationPolicy);
            //Assert.IsInstanceOf<V1Status> (response, "response is V1Status");
        }
        
        /// <summary>
        /// Test DeleteNamespacedStatefulSet
        /// </summary>
        [Test]
        public void DeleteNamespacedStatefulSetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //V1DeleteOptions body = null;
            //string pretty = null;
            //int? gracePeriodSeconds = null;
            //bool? orphanDependents = null;
            //string propagationPolicy = null;
            //var response = instance.DeleteNamespacedStatefulSet(name, _namespace, body, pretty, gracePeriodSeconds, orphanDependents, propagationPolicy);
            //Assert.IsInstanceOf<V1Status> (response, "response is V1Status");
        }
        
        /// <summary>
        /// Test GetAPIResources
        /// </summary>
        [Test]
        public void GetAPIResourcesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAPIResources();
            //Assert.IsInstanceOf<V1APIResourceList> (response, "response is V1APIResourceList");
        }
        
        /// <summary>
        /// Test ListControllerRevisionForAllNamespaces
        /// </summary>
        [Test]
        public void ListControllerRevisionForAllNamespacesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string pretty = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.ListControllerRevisionForAllNamespaces(fieldSelector, includeUninitialized, labelSelector, pretty, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1beta1ControllerRevisionList> (response, "response is V1beta1ControllerRevisionList");
        }
        
        /// <summary>
        /// Test ListDeploymentForAllNamespaces
        /// </summary>
        [Test]
        public void ListDeploymentForAllNamespacesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string pretty = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.ListDeploymentForAllNamespaces(fieldSelector, includeUninitialized, labelSelector, pretty, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<AppsV1beta1DeploymentList> (response, "response is AppsV1beta1DeploymentList");
        }
        
        /// <summary>
        /// Test ListNamespacedControllerRevision
        /// </summary>
        [Test]
        public void ListNamespacedControllerRevisionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string pretty = null;
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.ListNamespacedControllerRevision(_namespace, pretty, fieldSelector, includeUninitialized, labelSelector, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1beta1ControllerRevisionList> (response, "response is V1beta1ControllerRevisionList");
        }
        
        /// <summary>
        /// Test ListNamespacedDeployment
        /// </summary>
        [Test]
        public void ListNamespacedDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string pretty = null;
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.ListNamespacedDeployment(_namespace, pretty, fieldSelector, includeUninitialized, labelSelector, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<AppsV1beta1DeploymentList> (response, "response is AppsV1beta1DeploymentList");
        }
        
        /// <summary>
        /// Test ListNamespacedStatefulSet
        /// </summary>
        [Test]
        public void ListNamespacedStatefulSetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string pretty = null;
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.ListNamespacedStatefulSet(_namespace, pretty, fieldSelector, includeUninitialized, labelSelector, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1beta1StatefulSetList> (response, "response is V1beta1StatefulSetList");
        }
        
        /// <summary>
        /// Test ListStatefulSetForAllNamespaces
        /// </summary>
        [Test]
        public void ListStatefulSetForAllNamespacesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string pretty = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.ListStatefulSetForAllNamespaces(fieldSelector, includeUninitialized, labelSelector, pretty, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1beta1StatefulSetList> (response, "response is V1beta1StatefulSetList");
        }
        
        /// <summary>
        /// Test PatchNamespacedControllerRevision
        /// </summary>
        [Test]
        public void PatchNamespacedControllerRevisionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //Object body = null;
            //string pretty = null;
            //var response = instance.PatchNamespacedControllerRevision(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<V1beta1ControllerRevision> (response, "response is V1beta1ControllerRevision");
        }
        
        /// <summary>
        /// Test PatchNamespacedDeployment
        /// </summary>
        [Test]
        public void PatchNamespacedDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //Object body = null;
            //string pretty = null;
            //var response = instance.PatchNamespacedDeployment(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<AppsV1beta1Deployment> (response, "response is AppsV1beta1Deployment");
        }
        
        /// <summary>
        /// Test PatchNamespacedDeploymentScale
        /// </summary>
        [Test]
        public void PatchNamespacedDeploymentScaleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //Object body = null;
            //string pretty = null;
            //var response = instance.PatchNamespacedDeploymentScale(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<AppsV1beta1Scale> (response, "response is AppsV1beta1Scale");
        }
        
        /// <summary>
        /// Test PatchNamespacedDeploymentStatus
        /// </summary>
        [Test]
        public void PatchNamespacedDeploymentStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //Object body = null;
            //string pretty = null;
            //var response = instance.PatchNamespacedDeploymentStatus(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<AppsV1beta1Deployment> (response, "response is AppsV1beta1Deployment");
        }
        
        /// <summary>
        /// Test PatchNamespacedStatefulSet
        /// </summary>
        [Test]
        public void PatchNamespacedStatefulSetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //Object body = null;
            //string pretty = null;
            //var response = instance.PatchNamespacedStatefulSet(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<V1beta1StatefulSet> (response, "response is V1beta1StatefulSet");
        }
        
        /// <summary>
        /// Test PatchNamespacedStatefulSetStatus
        /// </summary>
        [Test]
        public void PatchNamespacedStatefulSetStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //Object body = null;
            //string pretty = null;
            //var response = instance.PatchNamespacedStatefulSetStatus(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<V1beta1StatefulSet> (response, "response is V1beta1StatefulSet");
        }
        
        /// <summary>
        /// Test ReadNamespacedControllerRevision
        /// </summary>
        [Test]
        public void ReadNamespacedControllerRevisionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //string pretty = null;
            //bool? exact = null;
            //bool? export = null;
            //var response = instance.ReadNamespacedControllerRevision(name, _namespace, pretty, exact, export);
            //Assert.IsInstanceOf<V1beta1ControllerRevision> (response, "response is V1beta1ControllerRevision");
        }
        
        /// <summary>
        /// Test ReadNamespacedDeployment
        /// </summary>
        [Test]
        public void ReadNamespacedDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //string pretty = null;
            //bool? exact = null;
            //bool? export = null;
            //var response = instance.ReadNamespacedDeployment(name, _namespace, pretty, exact, export);
            //Assert.IsInstanceOf<AppsV1beta1Deployment> (response, "response is AppsV1beta1Deployment");
        }
        
        /// <summary>
        /// Test ReadNamespacedDeploymentScale
        /// </summary>
        [Test]
        public void ReadNamespacedDeploymentScaleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //string pretty = null;
            //var response = instance.ReadNamespacedDeploymentScale(name, _namespace, pretty);
            //Assert.IsInstanceOf<AppsV1beta1Scale> (response, "response is AppsV1beta1Scale");
        }
        
        /// <summary>
        /// Test ReadNamespacedDeploymentStatus
        /// </summary>
        [Test]
        public void ReadNamespacedDeploymentStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //string pretty = null;
            //var response = instance.ReadNamespacedDeploymentStatus(name, _namespace, pretty);
            //Assert.IsInstanceOf<AppsV1beta1Deployment> (response, "response is AppsV1beta1Deployment");
        }
        
        /// <summary>
        /// Test ReadNamespacedStatefulSet
        /// </summary>
        [Test]
        public void ReadNamespacedStatefulSetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //string pretty = null;
            //bool? exact = null;
            //bool? export = null;
            //var response = instance.ReadNamespacedStatefulSet(name, _namespace, pretty, exact, export);
            //Assert.IsInstanceOf<V1beta1StatefulSet> (response, "response is V1beta1StatefulSet");
        }
        
        /// <summary>
        /// Test ReadNamespacedStatefulSetStatus
        /// </summary>
        [Test]
        public void ReadNamespacedStatefulSetStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //string pretty = null;
            //var response = instance.ReadNamespacedStatefulSetStatus(name, _namespace, pretty);
            //Assert.IsInstanceOf<V1beta1StatefulSet> (response, "response is V1beta1StatefulSet");
        }
        
        /// <summary>
        /// Test ReplaceNamespacedControllerRevision
        /// </summary>
        [Test]
        public void ReplaceNamespacedControllerRevisionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //V1beta1ControllerRevision body = null;
            //string pretty = null;
            //var response = instance.ReplaceNamespacedControllerRevision(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<V1beta1ControllerRevision> (response, "response is V1beta1ControllerRevision");
        }
        
        /// <summary>
        /// Test ReplaceNamespacedDeployment
        /// </summary>
        [Test]
        public void ReplaceNamespacedDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //AppsV1beta1Deployment body = null;
            //string pretty = null;
            //var response = instance.ReplaceNamespacedDeployment(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<AppsV1beta1Deployment> (response, "response is AppsV1beta1Deployment");
        }
        
        /// <summary>
        /// Test ReplaceNamespacedDeploymentScale
        /// </summary>
        [Test]
        public void ReplaceNamespacedDeploymentScaleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //AppsV1beta1Scale body = null;
            //string pretty = null;
            //var response = instance.ReplaceNamespacedDeploymentScale(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<AppsV1beta1Scale> (response, "response is AppsV1beta1Scale");
        }
        
        /// <summary>
        /// Test ReplaceNamespacedDeploymentStatus
        /// </summary>
        [Test]
        public void ReplaceNamespacedDeploymentStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //AppsV1beta1Deployment body = null;
            //string pretty = null;
            //var response = instance.ReplaceNamespacedDeploymentStatus(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<AppsV1beta1Deployment> (response, "response is AppsV1beta1Deployment");
        }
        
        /// <summary>
        /// Test ReplaceNamespacedStatefulSet
        /// </summary>
        [Test]
        public void ReplaceNamespacedStatefulSetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //V1beta1StatefulSet body = null;
            //string pretty = null;
            //var response = instance.ReplaceNamespacedStatefulSet(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<V1beta1StatefulSet> (response, "response is V1beta1StatefulSet");
        }
        
        /// <summary>
        /// Test ReplaceNamespacedStatefulSetStatus
        /// </summary>
        [Test]
        public void ReplaceNamespacedStatefulSetStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //V1beta1StatefulSet body = null;
            //string pretty = null;
            //var response = instance.ReplaceNamespacedStatefulSetStatus(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<V1beta1StatefulSet> (response, "response is V1beta1StatefulSet");
        }
        
    }

}
