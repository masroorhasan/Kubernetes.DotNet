/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.10
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Kubernetes.DotNet.Client;
using Kubernetes.DotNet.Api;
using Kubernetes.DotNet.Model;

namespace Kubernetes.DotNet.Test
{
    /// <summary>
    ///  Class for testing RbacAuthorization_v1beta1Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class RbacAuthorization_v1beta1ApiTests
    {
        private RbacAuthorization_v1beta1Api instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new RbacAuthorization_v1beta1Api();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RbacAuthorization_v1beta1Api
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' RbacAuthorization_v1beta1Api
            //Assert.IsInstanceOfType(typeof(RbacAuthorization_v1beta1Api), instance, "instance is a RbacAuthorization_v1beta1Api");
        }

        
        /// <summary>
        /// Test CreateClusterRole
        /// </summary>
        [Test]
        public void CreateClusterRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //V1beta1ClusterRole body = null;
            //string pretty = null;
            //var response = instance.CreateClusterRole(body, pretty);
            //Assert.IsInstanceOf<V1beta1ClusterRole> (response, "response is V1beta1ClusterRole");
        }
        
        /// <summary>
        /// Test CreateClusterRoleBinding
        /// </summary>
        [Test]
        public void CreateClusterRoleBindingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //V1beta1ClusterRoleBinding body = null;
            //string pretty = null;
            //var response = instance.CreateClusterRoleBinding(body, pretty);
            //Assert.IsInstanceOf<V1beta1ClusterRoleBinding> (response, "response is V1beta1ClusterRoleBinding");
        }
        
        /// <summary>
        /// Test CreateNamespacedRole
        /// </summary>
        [Test]
        public void CreateNamespacedRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //V1beta1Role body = null;
            //string pretty = null;
            //var response = instance.CreateNamespacedRole(_namespace, body, pretty);
            //Assert.IsInstanceOf<V1beta1Role> (response, "response is V1beta1Role");
        }
        
        /// <summary>
        /// Test CreateNamespacedRoleBinding
        /// </summary>
        [Test]
        public void CreateNamespacedRoleBindingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //V1beta1RoleBinding body = null;
            //string pretty = null;
            //var response = instance.CreateNamespacedRoleBinding(_namespace, body, pretty);
            //Assert.IsInstanceOf<V1beta1RoleBinding> (response, "response is V1beta1RoleBinding");
        }
        
        /// <summary>
        /// Test DeleteClusterRole
        /// </summary>
        [Test]
        public void DeleteClusterRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //V1DeleteOptions body = null;
            //string pretty = null;
            //int? gracePeriodSeconds = null;
            //bool? orphanDependents = null;
            //string propagationPolicy = null;
            //var response = instance.DeleteClusterRole(name, body, pretty, gracePeriodSeconds, orphanDependents, propagationPolicy);
            //Assert.IsInstanceOf<V1Status> (response, "response is V1Status");
        }
        
        /// <summary>
        /// Test DeleteClusterRoleBinding
        /// </summary>
        [Test]
        public void DeleteClusterRoleBindingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //V1DeleteOptions body = null;
            //string pretty = null;
            //int? gracePeriodSeconds = null;
            //bool? orphanDependents = null;
            //string propagationPolicy = null;
            //var response = instance.DeleteClusterRoleBinding(name, body, pretty, gracePeriodSeconds, orphanDependents, propagationPolicy);
            //Assert.IsInstanceOf<V1Status> (response, "response is V1Status");
        }
        
        /// <summary>
        /// Test DeleteCollectionClusterRole
        /// </summary>
        [Test]
        public void DeleteCollectionClusterRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pretty = null;
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.DeleteCollectionClusterRole(pretty, fieldSelector, includeUninitialized, labelSelector, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1Status> (response, "response is V1Status");
        }
        
        /// <summary>
        /// Test DeleteCollectionClusterRoleBinding
        /// </summary>
        [Test]
        public void DeleteCollectionClusterRoleBindingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pretty = null;
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.DeleteCollectionClusterRoleBinding(pretty, fieldSelector, includeUninitialized, labelSelector, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1Status> (response, "response is V1Status");
        }
        
        /// <summary>
        /// Test DeleteCollectionNamespacedRole
        /// </summary>
        [Test]
        public void DeleteCollectionNamespacedRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string pretty = null;
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.DeleteCollectionNamespacedRole(_namespace, pretty, fieldSelector, includeUninitialized, labelSelector, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1Status> (response, "response is V1Status");
        }
        
        /// <summary>
        /// Test DeleteCollectionNamespacedRoleBinding
        /// </summary>
        [Test]
        public void DeleteCollectionNamespacedRoleBindingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string pretty = null;
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.DeleteCollectionNamespacedRoleBinding(_namespace, pretty, fieldSelector, includeUninitialized, labelSelector, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1Status> (response, "response is V1Status");
        }
        
        /// <summary>
        /// Test DeleteNamespacedRole
        /// </summary>
        [Test]
        public void DeleteNamespacedRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //V1DeleteOptions body = null;
            //string pretty = null;
            //int? gracePeriodSeconds = null;
            //bool? orphanDependents = null;
            //string propagationPolicy = null;
            //var response = instance.DeleteNamespacedRole(name, _namespace, body, pretty, gracePeriodSeconds, orphanDependents, propagationPolicy);
            //Assert.IsInstanceOf<V1Status> (response, "response is V1Status");
        }
        
        /// <summary>
        /// Test DeleteNamespacedRoleBinding
        /// </summary>
        [Test]
        public void DeleteNamespacedRoleBindingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //V1DeleteOptions body = null;
            //string pretty = null;
            //int? gracePeriodSeconds = null;
            //bool? orphanDependents = null;
            //string propagationPolicy = null;
            //var response = instance.DeleteNamespacedRoleBinding(name, _namespace, body, pretty, gracePeriodSeconds, orphanDependents, propagationPolicy);
            //Assert.IsInstanceOf<V1Status> (response, "response is V1Status");
        }
        
        /// <summary>
        /// Test GetAPIResources
        /// </summary>
        [Test]
        public void GetAPIResourcesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAPIResources();
            //Assert.IsInstanceOf<V1APIResourceList> (response, "response is V1APIResourceList");
        }
        
        /// <summary>
        /// Test ListClusterRole
        /// </summary>
        [Test]
        public void ListClusterRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pretty = null;
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.ListClusterRole(pretty, fieldSelector, includeUninitialized, labelSelector, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1beta1ClusterRoleList> (response, "response is V1beta1ClusterRoleList");
        }
        
        /// <summary>
        /// Test ListClusterRoleBinding
        /// </summary>
        [Test]
        public void ListClusterRoleBindingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pretty = null;
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.ListClusterRoleBinding(pretty, fieldSelector, includeUninitialized, labelSelector, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1beta1ClusterRoleBindingList> (response, "response is V1beta1ClusterRoleBindingList");
        }
        
        /// <summary>
        /// Test ListNamespacedRole
        /// </summary>
        [Test]
        public void ListNamespacedRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string pretty = null;
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.ListNamespacedRole(_namespace, pretty, fieldSelector, includeUninitialized, labelSelector, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1beta1RoleList> (response, "response is V1beta1RoleList");
        }
        
        /// <summary>
        /// Test ListNamespacedRoleBinding
        /// </summary>
        [Test]
        public void ListNamespacedRoleBindingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string pretty = null;
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.ListNamespacedRoleBinding(_namespace, pretty, fieldSelector, includeUninitialized, labelSelector, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1beta1RoleBindingList> (response, "response is V1beta1RoleBindingList");
        }
        
        /// <summary>
        /// Test ListRoleBindingForAllNamespaces
        /// </summary>
        [Test]
        public void ListRoleBindingForAllNamespacesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string pretty = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.ListRoleBindingForAllNamespaces(fieldSelector, includeUninitialized, labelSelector, pretty, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1beta1RoleBindingList> (response, "response is V1beta1RoleBindingList");
        }
        
        /// <summary>
        /// Test ListRoleForAllNamespaces
        /// </summary>
        [Test]
        public void ListRoleForAllNamespacesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fieldSelector = null;
            //bool? includeUninitialized = null;
            //string labelSelector = null;
            //string pretty = null;
            //string resourceVersion = null;
            //int? timeoutSeconds = null;
            //bool? watch = null;
            //var response = instance.ListRoleForAllNamespaces(fieldSelector, includeUninitialized, labelSelector, pretty, resourceVersion, timeoutSeconds, watch);
            //Assert.IsInstanceOf<V1beta1RoleList> (response, "response is V1beta1RoleList");
        }
        
        /// <summary>
        /// Test PatchClusterRole
        /// </summary>
        [Test]
        public void PatchClusterRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //Object body = null;
            //string pretty = null;
            //var response = instance.PatchClusterRole(name, body, pretty);
            //Assert.IsInstanceOf<V1beta1ClusterRole> (response, "response is V1beta1ClusterRole");
        }
        
        /// <summary>
        /// Test PatchClusterRoleBinding
        /// </summary>
        [Test]
        public void PatchClusterRoleBindingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //Object body = null;
            //string pretty = null;
            //var response = instance.PatchClusterRoleBinding(name, body, pretty);
            //Assert.IsInstanceOf<V1beta1ClusterRoleBinding> (response, "response is V1beta1ClusterRoleBinding");
        }
        
        /// <summary>
        /// Test PatchNamespacedRole
        /// </summary>
        [Test]
        public void PatchNamespacedRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //Object body = null;
            //string pretty = null;
            //var response = instance.PatchNamespacedRole(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<V1beta1Role> (response, "response is V1beta1Role");
        }
        
        /// <summary>
        /// Test PatchNamespacedRoleBinding
        /// </summary>
        [Test]
        public void PatchNamespacedRoleBindingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //Object body = null;
            //string pretty = null;
            //var response = instance.PatchNamespacedRoleBinding(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<V1beta1RoleBinding> (response, "response is V1beta1RoleBinding");
        }
        
        /// <summary>
        /// Test ReadClusterRole
        /// </summary>
        [Test]
        public void ReadClusterRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string pretty = null;
            //var response = instance.ReadClusterRole(name, pretty);
            //Assert.IsInstanceOf<V1beta1ClusterRole> (response, "response is V1beta1ClusterRole");
        }
        
        /// <summary>
        /// Test ReadClusterRoleBinding
        /// </summary>
        [Test]
        public void ReadClusterRoleBindingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string pretty = null;
            //var response = instance.ReadClusterRoleBinding(name, pretty);
            //Assert.IsInstanceOf<V1beta1ClusterRoleBinding> (response, "response is V1beta1ClusterRoleBinding");
        }
        
        /// <summary>
        /// Test ReadNamespacedRole
        /// </summary>
        [Test]
        public void ReadNamespacedRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //string pretty = null;
            //var response = instance.ReadNamespacedRole(name, _namespace, pretty);
            //Assert.IsInstanceOf<V1beta1Role> (response, "response is V1beta1Role");
        }
        
        /// <summary>
        /// Test ReadNamespacedRoleBinding
        /// </summary>
        [Test]
        public void ReadNamespacedRoleBindingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //string pretty = null;
            //var response = instance.ReadNamespacedRoleBinding(name, _namespace, pretty);
            //Assert.IsInstanceOf<V1beta1RoleBinding> (response, "response is V1beta1RoleBinding");
        }
        
        /// <summary>
        /// Test ReplaceClusterRole
        /// </summary>
        [Test]
        public void ReplaceClusterRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //V1beta1ClusterRole body = null;
            //string pretty = null;
            //var response = instance.ReplaceClusterRole(name, body, pretty);
            //Assert.IsInstanceOf<V1beta1ClusterRole> (response, "response is V1beta1ClusterRole");
        }
        
        /// <summary>
        /// Test ReplaceClusterRoleBinding
        /// </summary>
        [Test]
        public void ReplaceClusterRoleBindingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //V1beta1ClusterRoleBinding body = null;
            //string pretty = null;
            //var response = instance.ReplaceClusterRoleBinding(name, body, pretty);
            //Assert.IsInstanceOf<V1beta1ClusterRoleBinding> (response, "response is V1beta1ClusterRoleBinding");
        }
        
        /// <summary>
        /// Test ReplaceNamespacedRole
        /// </summary>
        [Test]
        public void ReplaceNamespacedRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //V1beta1Role body = null;
            //string pretty = null;
            //var response = instance.ReplaceNamespacedRole(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<V1beta1Role> (response, "response is V1beta1Role");
        }
        
        /// <summary>
        /// Test ReplaceNamespacedRoleBinding
        /// </summary>
        [Test]
        public void ReplaceNamespacedRoleBindingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string _namespace = null;
            //V1beta1RoleBinding body = null;
            //string pretty = null;
            //var response = instance.ReplaceNamespacedRoleBinding(name, _namespace, body, pretty);
            //Assert.IsInstanceOf<V1beta1RoleBinding> (response, "response is V1beta1RoleBinding");
        }
        
    }

}
